import React, { useRef, useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import dynamic from "next/dynamic";
// @ts-ignore
import type { GraphData } from "react-force-graph";

import {
  AboutMe,
  BackgroundGrid,
  BackgroundMarquee,
  Hero,
  Navigation,
  SkillPrompt,
  ProjectList,
  ExperienceList,
} from "@components/index";
import graphData from "@utils/graphData";
const SkillGraph = dynamic(() => import("@components/skills/SkillGraph"), {
  ssr: false,
});

const Home: NextPage = () => {
  // TODO: Fix ref type
  const mainRef = useRef<any>(),
    skillPromptRef = useRef<any>(),
    projectListRef = useRef<any>(),
    [skillNodeReveal, setskillNodeReveal] = useState<GraphData>({
      nodes: [],
      links: [],
    }),
    [skillTextReveal, setskillTextReveal] = useState<boolean>(false),
    [projectsReveal, setProjectsReveal] = useState<boolean>(false);

  useEffect(() => {
    const handleScroll = () => {
      if (
        window.pageYOffset + window.innerHeight - 400 >
        skillPromptRef.current.offsetTop
      )
        setTimeout(() => {
          if (!skillTextReveal) setskillNodeReveal(graphData);
          setskillTextReveal(true);
        }, 1000);

      if (
        window.pageYOffset + window.innerHeight >
        projectListRef.current.offsetTop
      )
        setTimeout(() => {
          setProjectsReveal(true);
        }, 1000);
    };
    window.addEventListener("scroll", handleScroll, { passive: true });
    return () => window.removeEventListener("scroll", handleScroll);
  }, [skillTextReveal, skillNodeReveal, projectsReveal]);

  return (
    <>
      <Head>
        <title>Ari Birnbaum</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://use.typekit.net/ihw7ajs.css" />
      </Head>

      <main ref={mainRef} className="dark:text-white">
        <BackgroundGrid />
        <Navigation />
        <SkillGraph data={skillNodeReveal} />
        <section className="h-screen overflow-hidden bg-white dark:bg-black">
          <BackgroundMarquee />
          <Hero />
        </section>
        <section className="h-screen overflow-hidden bg-white dark:bg-black">
          <BackgroundMarquee />
          <AboutMe />
        </section>
        <section className="h-screen overflow-hidden" ref={skillPromptRef}>
          <SkillPrompt trigger={skillTextReveal} />
        </section>
        <section className="overflow-hidden" ref={projectListRef}>
          <ProjectList trigger={projectsReveal} />
        </section>
        <section className="overflow-hidden">
          <ExperienceList trigger={projectsReveal} />
        </section>
      </main>
    </>
  );
};

export default Home;
