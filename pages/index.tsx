import React, { useRef, useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import dynamic from "next/dynamic";
// @ts-ignore
import type { GraphData } from "react-force-graph";

import {
  AboutMe,
  GOL,
  BackgroundGrid,
  BackgroundMarquee,
  Hero,
  Navigation,
  SkillPrompt,
  ProjectList,
  ExperienceList,
} from "@components/index";
import graphData from "@utils/graphData";
const SkillGraph = dynamic(() => import("@components/skills/SkillGraph"), {
  ssr: false,
});

const Home: NextPage = () => {
  // TODO: Fix ref type
  const mainRef = useRef<HTMLDivElement>(null),
    skillPromptRef = useRef<HTMLDivElement>(null),
    [focusedNodes, setFocusedNodes] = useState<string[]>([]),
    [skillNodeReveal, setskillNodeReveal] = useState<GraphData>({
      nodes: [],
      links: [],
    }),
    [skillTextReveal, setskillTextReveal] = useState<boolean>(false);

  useEffect(() => {
    const handleScroll = () => {
      // The graph has been scrolled into view. Time to reveal it.
      if (
        !skillTextReveal &&
        window.pageYOffset + window.innerHeight - 300 >
          skillPromptRef!.current!.offsetTop
      ) {
        setTimeout(() => {
          setskillNodeReveal(graphData);
          setskillTextReveal(true);
        }, 1000);
      }
    };

    window.addEventListener("scroll", handleScroll, { passive: true });
    return () => window.removeEventListener("scroll", handleScroll);
  }, [skillTextReveal]);

  return (
    <>
      <Head>
        <title>Ari Birnbaum</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://use.typekit.net/ihw7ajs.css" />
      </Head>

      <main ref={mainRef} className="dark:text-white">
        <BackgroundGrid />
        <Navigation />
        <SkillGraph data={skillNodeReveal} focusedNodes={focusedNodes} />
        <section className="h-screen overflow-hidden bg-white dark:bg-black">
          <BackgroundMarquee />
          <Hero />
        </section>
        <section className="bg-white dark:bg-black border-y border-black/20 dark:border-white/20">
          <div className="relative h-screen overflow-hidden">
            <AboutMe />
            <GOL />
          </div>
        </section>
        <section className="h-screen overflow-hidden" ref={skillPromptRef}>
          <SkillPrompt trigger={skillTextReveal} />
        </section>
        <div className="border-t md:border-0 pt-14 border-black/20 dark:border-white/20 bg-white/50 dark:bg-black/50 backdrop-blur-lg md:backdrop-blur-none md:bg-transparent">
          <section className="overflow-hidden">
            <ProjectList setFocusedNodes={setFocusedNodes} />
          </section>
          <section className="overflow-hidden">
            <ExperienceList />
          </section>
        </div>
      </main>
    </>
  );
};

export default Home;
